# .github/workflows/slack-notifications.yml
name: Slack Notifications

on:
  workflow_call:
    secrets:
      SLACK_BOT_TOKEN:
        required: true
    inputs:
      status:
        description: 'The status of the workflow (success or failure)'
        required: true
        type: string
      actor:
        description: 'The GitHub actor'
        required: true
        type: string
      repository:
        description: 'The GitHub repository'
        required: true
        type: string
      branch:
        description: 'The branch name'
        required: true
        type: string
      run_id:
        description: 'The workflow run ID'
        required: true
        type: string
      failures:
        description: 'Test failure details (if any)'
        required: false
        type: string

jobs:
  notify_slack:
    runs-on: ubuntu-latest
    steps:
      - name: Post to Slack
        run: |
          if [ "${{ inputs.status }}" == "success" ]; then
            payload=$(jq -n --arg repository "${{ inputs.repository }}" --arg branch "${{ inputs.branch }}" --arg actor "${{ inputs.actor }}" --arg run_id "${{ inputs.run_id }}" '{
              "channel": "team-gnark-build",
              "text": "GitHub Action build result: success",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":white_check_mark: \($repository) *\($branch)*"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "plain_text",
                      "text": "Author: \($actor)",
                      "emoji": true
                    }
                  ]
                }
              ]
            }')
          else
            # Escape the failures input for JSON and Slack
            escaped_failures=$(echo "${{ inputs.failures }}" | jq -sRr @json | sed 's/\\n/\\n/g')
            payload=$(jq -n --arg repository "${{ inputs.repository }}" --arg branch "${{ inputs.branch }}" --arg actor "${{ inputs.actor }}" --arg run_id "${{ inputs.run_id }}" --arg failures "$escaped_failures" '{
              "channel": "team-gnark-build",
              "text": "GitHub Action build result: failure",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":red_circle: \($repository) *\($branch)*"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/\($repository)/actions/runs/\($run_id)|View Details>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Failed tests:*\n\n\($failures)"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "plain_text",
                      "text": "Author: \($actor)",
                      "emoji": true
                    }
                  ]
                }
              ]
            }')
          fi
          curl -X POST -H 'Content-type: application/json; charset=utf-8' --data "$payload" https://slack.com/api/chat.postMessage -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}"
        shell: bash